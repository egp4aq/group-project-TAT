---
title: "section2"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r, message=FALSE, warning=FALSE}
rm(list=ls())
```

```{r, message=FALSE, warning=FALSE}
### **Loading Libraries**
library(here)
library(janitor)
library(tidyverse)
library(readr)
library(patchwork)
library(targets)
library(httr)
library(jsonlite)
```

### **Read_files Function**

```{r, message=FALSE, warning=FALSE}
#Import data from multiple files into R
read_files <- function(file_names) {
  # Loop through the file names and read the CSV files into dynamically named variables
  for (i in seq_along(file_names)) {
    # Construct the dynamic name for the variable
    var_name <- paste0("data_", i)
    
    # Read the CSV file
    file_data <- read_csv(here(pathway, file_names[i]), na = c("-999", ""))
    # Assign the data frame to a variable with the constructed name
    assign(var_name, file_data, envir = .GlobalEnv)
  }
}
```

### **Data Cleaning Function**

```{r, message=FALSE, warning=FALSE}
#Process and merge data from all files

#Iterating through each single file to select the defined parameters and join all files
combined_df<-NULL
cleaning_function<-function(parameters){
  for (j in seq_along(variables)) {
    # Get the data frame associated with the current variable name
    current_data <- get(variables[j])
    # Select the desired columns (from parameters list)
    selected_col <- current_data %>% 
      select(parameters)
    # Perform a bind join 
    combined_df <- bind_rows(selected_col, combined_df)#bind_rows
    }
  return(combined_df)
}
```

### **Defining the Parameters**

```{r, message=FALSE, warning=FALSE}
#Link to where the data resides
pathway <- "/courses/EDS214/group_project/2024/tropical-aqua-titans/raw_data"

#Names of files
file_names <- c("RioMameyesPuenteRoto.csv", 
                "QuebradaCuenca1-Bisley.csv")

#Define Water Quality Parameters
parameters<-c("Sample_ID",
              "Sample_Date",
              "NO3-N",
              "K",
              "TSS")
```

### **Running the Functions**

```{r, message=FALSE, warning=FALSE}
read_files(file_names)
variables <- ls(pattern = "^data_")
combined_df<-cleaning_function(parameters)
```

##Section 2 - Graphing the WQ data

```{r, message=FALSE, warning=FALSE}
# Filter the data by the specified year range and make column name lower case
filtered_df <- combined_df %>%
  filter(year(Sample_Date) > 2012 & year(Sample_Date) < 2014)

filtered_df <- clean_names(filtered_df)

filtered_df<-filtered_df%>%
mutate(across(3:ncol(filtered_df), ~ as.numeric(as.character(.))))
```

### Open-Source Historical Weather Data API 
```{r}
# Define your coordinates for the location (https://lternet.edu/site/luquillo-lter/)
latitude <- 18.37165  # Latitude for Luquillo, PR
longitude <- -65.7193  # Longitude for Luquillo, PR


# Define the start and end dates for historical data (YYYY-MM-DD format)
start_date <- "2013-01-01" 
end_date <- "2014-01-01"    

# Define the URL for the Open-Meteo API
url <- paste0("https://archive-api.open-meteo.com/v1/era5?latitude=", latitude,
              "&longitude=", longitude,
              "&daily=precipitation_sum",
              "&start_date=", start_date,
              "&end_date=", end_date,
              "&timezone=America%2FNew_York")  # Adjust timezone as needed


# Make the API request
response <- GET(url)
weather_data <- fromJSON(content(response, "text"))

# Extract the daily weather data
daily_data <- weather_data$daily

# Convert to a data frame
df_weather <- data.frame(
  date = as.Date(daily_data$time),
  precipitation_sum = daily_data$precipitation_sum)
```



### **Plotting the data**

```{r, message=FALSE, warning=FALSE}
#plot for K
p1 <- ggplot(filtered_df) +
  geom_line(aes(sample_date, tss, color = sample_id)) +
  labs(x = "Year",
       y = "TSS (mg/l)") +
  scale_color_manual(values = c("#C0DF85", "#EE85B5", "#90E0F3"),
                    name = "Location: ",
                    labels = c("PRM", "BQ1", "BQ2")) +
  theme_minimal()

# Plot the data using ggplot2

# plot for weather
p2 <- ggplot(df_weather,aes(date, precipitation_sum)) +
  geom_line(color="navy") +
  labs(x = "Year",
       y = "Daily Precipitation (mm)") +
  theme_minimal()# +  geom_vline(xintercept = as.numeric(filtered_df$sample_date[39]), linetype = "dashed") 

# patchwork of both plots
p3 <- p1/p2

p3 +
  plot_annotation(title = "Effect of Hurricane Hugo on Stream Water Potassium and Nitrate\n in the Luquillo Mountains") + theme(plot.title=element_text(hjust=0.5)) +
  plot_layout(guides = "collect")
```
